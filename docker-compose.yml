version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - DEBUG=${DEBUG:-False}
      - API_TITLE=${API_TITLE:-Movr API}
      - API_VERSION=${API_VERSION:-1.0.0}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-movr_db}
      - PORT=8000
      - MONNIFY_API_KEY=${MONNIFY_API_KEY:-}
      - MONNIFY_SECRET_KEY=${MONNIFY_SECRET_KEY:-}
      - MONNIFY_CONTRACT_CODE=${MONNIFY_CONTRACT_CODE:-}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME:-}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY:-}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET:-}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-}
      - SENDGRID_FROM_EMAIL=${SENDGRID_FROM_EMAIL:-noreply@movr.app}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-["http://localhost:3000","http://localhost:8000"]}
    depends_on:
      - db
    volumes:
      - ./backend:/app
    command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - movr-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-movr_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - movr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  movr-network:
    driver: bridge